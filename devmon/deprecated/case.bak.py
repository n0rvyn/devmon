#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from dataclasses import dataclass
from typing import Literal


# 1: alert
# 2: recovery
# 3: message
CaseType = Literal[
    '1', '2', '3'
]

CaseServ = Literal[
    '1', '3', '5'
]

CaseStat = Literal[
    'closed', 'open'
]


PublishStat = Literal[
    0, 1, 2  # 0: not published; 1: alert published; 2: recovery published
]


@dataclass
class IDRange:
    start: str = None
    end:   str = None
    count: int = 0


@dataclass
class CaseUpdatePart:
    pass


@dataclass
class TheSameCasePart:
    rid: str = None  # resource ID from CMDB
    region: str = None  # DCA, DCB, DCC
    area: str = None  # CBP, MBA, IFA...
    addr_in_cmdb: str = None  # an address related with Resource ID in CMDB
    sources: str = 'SNMP Console'
    severity: CaseServ = '1'  # 1, 3, 5
    situation_desc: str = None
    object: str = None
    threshold: str = None  # watermark for countable value or reference for others


@dataclass
class Case:
    id: str = None  # uniq id, generated by python3 method random
    core_part: TheSameCasePart = None
    rid: str = None  # resource ID from CMDB
    region: str = None  # DCA, DCB, DCC
    area: str = None  # CBP, MBA, IFA...
    addr_in_cmdb: str = None  # an address related with Resource ID in CMDB
    count: int = 0  # number of repeated times for an 'alert' case
    sources: str = 'SNMP Console'
    severity: CaseServ = '1'  # 1, 3, 5
    description: str = None
    content: str = None  # diff from alert to recovery
    situation_desc: str = None
    type: CaseType = '3'  # 1: alert, 2: recovery
    alert: bool = False  # the status of object is normal or not
    object: str = None
    threshold: str = None  # watermark for countable value or reference for others
    current_value: str = None
    # alert_published: bool = False
    # recovery_published: bool = False
    publish: PublishStat = 0
    visible: bool = True  # todo add OID
    oid: str = None
    oid_range: IDRange = None
    related_symbol: str = None
    void: str = None
    event: str = f'{sources} {severity} {situation_desc} {content} {type} {threshold} {current_value} {rid} {addr_in_cmdb}'

